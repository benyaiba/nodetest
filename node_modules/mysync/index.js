var Deferred = require("Deferred");
function syncRun() {
    var funArr = Array.prototype.slice.call(arguments);
    
    var circleDone = function(funcs, dfd){
        if(funcs.length == 0){
            // no more functions leave the recursion
            return;
        }
        
        var curFunc = funcs.shift();
        if(!dfd){
            // first call
            dfd = curFunc();
            curFunc = funcs.shift();
        }else{
            // form second call and so on...
        }
        
        dfd.done(function(){
            var args = Array.prototype.slice.call(arguments);
            dfd = curFunc.apply(this, args);
            // call recursively
            circleDone(funcs, dfd);
        });

    }
    
    circleDone(funArr);
}
exports.syncRun = syncRun;